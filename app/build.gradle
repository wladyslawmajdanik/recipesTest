apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'realm-android'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    buildTypes.each {
        it.buildConfigField 'String', 'BASE_URL', keystoreProperties['BaseUrl']

    }
    signingConfigs {
        production {
            readKeystoreProperties()
        }
        dev {
            readKeystorePropertiesDev()
        }
    }


    compileSdkVersion 27
        buildToolsVersion '27.0.3'
        defaultConfig {
            applicationId "schibsted.recipestest"
            minSdkVersion 16
            targetSdkVersion 27
            versionCode 1
            versionName "1.0.4"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            multiDexEnabled true
            javaCompileOptions {
                annotationProcessorOptions {
                    includeCompileClasspath false
                }
            }
        }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

            applicationIdSuffix = ".dev"
            debuggable true
        }
    }


    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        pickFirst 'publicsuffixes.gz'
    }

    lintOptions {
        disable "ResourceType"
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    sourceSets {
        androidTest {
            java.srcDirs = ['androidTest/java']
        }
    }

    dataBinding {
        enabled = true
    }

}

def readKeystoreProperties() {
    def propsFile = rootProject.file('keystore.properties')
    def configName = 'release'
    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        android.signingConfigs[configName].storeFile = file(props['StoreFile'])
        android.signingConfigs[configName].storePassword = props['StorePassword']
        android.signingConfigs[configName].keyAlias = props['KeyAlias']
        android.signingConfigs[configName].keyPassword = props['KeyPassword']
        println "===== read keystore properties success ====="
    }
}

def readKeystorePropertiesDev() {
    def propsFile = rootProject.file('keystore.properties')
    def configName = 'dev'
    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        println "===== read keystore properties success ====="
    }
}

android {
    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()
}

repositories {
    maven {
        url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://dl.google.com/dl/android/maven2/' }
    }
}

dependencies {
    compile 'com.android.support:multidex:1.0.3'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile('com.github.ihsanbal:LoggingInterceptor:2.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    compile 'com.infstory:proguard-snippets:1.0.0'
    compile 'com.android.support:recyclerview-v7:27.1.0'
    compile 'com.android.support:appcompat-v7:27.1.0'
    compile 'com.android.support:design:27.1.0'
    compile 'com.android.support:cardview-v7:27.1.0'


    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.8'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'com.google.code.gson:gson:2.8.2'

    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:2.14.1"

    compile('com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar') {
        exclude group: 'com.google.android.gms'
    }

    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    compile 'com.jakewharton.timber:timber:4.6.0'
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    compile 'com.uphyca:stetho_realm:2.1.0'
    compile 'com.github.bumptech.glide:glide:4.6.1'
    compile 'com.afollestad.material-dialogs:core:0.9.4.7'

    provided "org.projectlombok:lombok:1.16.18" // keep
    annotationProcessor "org.projectlombok:lombok:1.16.18"


    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'
    androidTestCompile 'org.mockito:mockito-android:2.7.22'

    allprojects {
        repositories {
            maven { url "https://jitpack.io" }
            maven { url 'https://maven.sumup.com/releases' }
        }
    }

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'
            }
        }
    }
}


